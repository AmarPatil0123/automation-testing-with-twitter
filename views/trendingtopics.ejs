<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trending Topics</title>
</head>

<body>
    <h1>Trending Topics</h1><br><br><br>

    <h3 class="loading" style="text-align: center;"></h3>
    <button id="first">Click here to fetch trending topics</button><br><br><br><br>

    <p class="ip"></p>

    <ul id="trends"></ul>

    <!-- Disable the second button initially -->
    <button id="second" disabled>Click here to fetch more trending topics</button>

    <div class="dbdata"></div>

    <script>
        let ul = document.querySelector("#trends");
        let div = document.querySelector(".dbdata");
        let firstButton = document.querySelector("#first");
        let secondButton = document.querySelector("#second");

        // Event listener for the first button
        firstButton.addEventListener("click", async () => {
            try {
                // Disable the first button after click
                firstButton.disabled = true;

                if (localStorage.getItem("start")) {
                    localStorage.removeItem("start");
                }

                localStorage.setItem("start", 5);

                document.querySelector(".loading").textContent = "Loading..."
                const res = await fetch("https://automation-testing-with-twitter.onrender.com/tdata");
                const data = await res.json();


                document.querySelector(".loading").textContent = ""

                console.log(data.trendsArray);

                for (let trend of data.trendsArray) {
                    let li = document.createElement("li");
                    li.textContent = trend;
                    ul.appendChild(li);
                }

                document.querySelector(".ip").textContent = `The IP address used for this scraping is ${data.ip}`;

                // Enable the second button after first is clicked
                secondButton.disabled = false;
            } catch (error) {
                console.error("Error fetching data:", error);
                alert("Failed to fetch trending topics.");
                // Re-enable the first button in case of an error
                firstButton.disabled = false;
            }
        });

        // Event listener for the second button
        secondButton.addEventListener("click", async () => {
            try {
                let start = Number(localStorage.getItem("start"));

                document.querySelector(".loading").textContent = "Loading..."

                const res = await fetch(`https://automation-testing-with-twitter.onrender.com/${start}`);
                const data = await res.json();

                console.log(data);

                document.querySelector(".loading").textContent = ""

                if (data.trends === "No more trends available") {
                    alert("No more trends available");
                    return localStorage.setItem("start", start);
                }

                for (let trend of data.trendsArray) {
                    let li = document.createElement("li");
                    li.textContent = trend;
                    ul.appendChild(li);
                }

                let p = document.createElement("p");
                p.textContent = `id : ${data._id}`;
                div.appendChild(p);

                for (let trend of data.trendsArray) {
                    let p = document.createElement("p");
                    p.textContent = trend;
                    div.appendChild(p);
                }

                let p1 = document.createElement("p");
                p1.textContent = data.ip;
                div.appendChild(p1);

                let p2 = document.createElement("p");
                p2.textContent = data.createdAt;
                div.appendChild(p2);

                let hr = document.createElement("hr");
                hr.style.border = "1px solid #333";
                div.appendChild(hr);

                localStorage.setItem("start", start + 5);
            } catch (error) {
                if (error === "Cannot read properties of undefined (reading 'getText')") {
                    alert("No more trends available");
                }
                console.error("Error fetching data:", error);
                alert("Failed to fetch trending topics.");
            }
        });
    </script>
</body>

</html>
